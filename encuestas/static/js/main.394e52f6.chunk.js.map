{"version":3,"sources":["types/encuestaTypes.js","actions/encuestaActions.js","components/utils/Loader.js","components/DatosEncuestado/index.js","components/Encuesta/Guardado.js","components/Encuestas/ImagenOpciones.js","components/Encuestas/TextoOpcion.js","components/Encuestas/Opciones.js","components/Encuesta/index.js","components/App.js","reducers/encuestaReducers.js","reducers/index.js","index.js"],"names":["TRAER_UNO","GUARDADO","traer_uno","slug","dispatch","a","axios","get","respuesta","datos","data","preguntas","map","pregunta","respuestas","respuesta_texto","actualizado","type","payload","console","log","agregar_respuesta","id_pregunta","getState","encuesta","encuestaReducers","concat","agregar_respuesta_uno","quitar_respuesta","index","findIndex","resp","id","splice","agregar_respuesta_texto","guardar_datos","datos_encuestado","forEach","length","res","push","dependencia","data_send","id_encuesta","post","Loader","className","DatosEncuestado","state","ciudades","handleChange","ev","name","target","value","setState","this","results","htmlFor","props","nombres","onChange","apellidos","edad","genero","ciudad","key","nombre","email","tiene_hijos","placeholder","edad_hijos","React","Component","Guardado","mensaje","ImagenOpciones","checked","handleClick","opcion","classButton","onClick","src","imagen","alt","connect","encuestaActions","TextoOpcion","flag","multiple","titulo","Opciones","handleMultiples","opciones","filter","op","especifica","expecifica","max_respuestas","handleMultiplesDependencia","pre","respuestas_multiples","reducers","Encuesta","handleSumit","preventDefault","handleChangeInput","match","params","cargando","onSubmit","descripcion","App","exact","path","component","INITIA_STATE","error","combineReducers","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.394e52f6.chunk.js","sourcesContent":["export const CARGANDO = 'CARGANDO_ENCUESTA';\nexport const ERROR = 'ERROR_ENCUESTA';\nexport const TRAER_UNO  ='TRAER_UNO_ENCUESTA';\nexport const DATOS_ENCUESTADO = 'DATOS_ENCUESTADO';\nexport const GUARDADO = 'GUARDADO_ENCUESTA';\n","import axios from 'axios';\n\nimport {\n    TRAER_UNO,\n    GUARDADO\n} from '../types/encuestaTypes';\n\nexport const traer_uno = (slug) => async (dispatch) => {\n    try {\n        const respuesta = await axios.get(`http://www.mktestudios.com/api/v1/encuestas/${slug}/`);\n        const datos = respuesta.data;\n\n        const preguntas = datos.preguntas.map(pregunta => ({\n            ...pregunta,\n            respuestas: [],\n            respuesta_texto: ''\n        }));\n        \n        const actualizado = {\n            ...datos,\n            preguntas\n        };\n        \n        dispatch({\n            type: TRAER_UNO,\n            payload: actualizado\n        });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const agregar_respuesta = (id_pregunta, respuesta) => (dispatch, getState) => {\n    \n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: preguntas[id_pregunta].respuestas.concat(respuesta)\n    }\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n}\n\nexport const agregar_respuesta_uno = (id_pregunta, respuesta) => (dispatch, getState) => {\n    \n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: [respuesta]\n    }\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n}\n\nexport const quitar_respuesta = (id_pregunta, respuesta) => (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    const respuestas = preguntas[id_pregunta].respuestas;\n    const index = respuestas.findIndex(resp => resp.id === respuesta.id);\n    respuestas.splice(index, 1);\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: respuestas\n    };\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n    \n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n\n}\n\nexport const agregar_respuesta_texto = (id_pregunta, respuesta) => (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuesta_texto: respuesta\n    };\n\n    const actualizado = {\n        ...encuesta,\n        preguntas\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n};\n\nexport const guardar_datos = (datos_encuestado) => async (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    \n    const respuestas = [];\n\n    encuesta.preguntas.forEach(pregunta => {\n        if (pregunta.respuestas.length > 0) {\n            pregunta.respuestas.forEach((res)=> {\n                respuestas.push({\n                    'id_pregunta': pregunta.id,\n                    'id_opcion': res.id,\n                    'texto_respuesta': pregunta.respuesta_texto,\n                    'relacion_pregunta': pregunta.dependencia || 0\n                });\n            });\n        } else {\n            respuestas.push({\n                'id_pregunta': pregunta.id,\n                'id_opcion': 0,\n                'texto_respuesta': pregunta.respuesta_texto,\n                'relacion_pregunta': pregunta.dependencia || 0\n            });\n        }\n        \n    });\n\n    const data_send = {\n        id_encuesta: encuesta.slug,\n        respuestas,\n        datos_encuestado: datos_encuestado,\n    };\n\n    try {\n        await axios.post('http://www.mktestudios.com/api/v1/respuestas/', data_send);\n        dispatch({\n            type: GUARDADO,\n            payload: 'El formulario ha sido guardado correctamente muchas gracias.'\n        });\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n","import React from 'react';\n\nimport '../../css/Loader.css';\n\nconst Loader = () => (\n    <div className=\"loader\">\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    </div>\n    \n);\n\nexport default Loader;\n","import React from 'react';\nimport axios from 'axios';\n\nclass DatosEncuestado extends React.Component {\n    state = {\n        ciudades: [],\n    }\n\n    async componentDidMount() {\n        const respuesta = await axios.get('http://www.mktestudios.com/api/v1/ciudades/');\n        this.setState({\n            ciudades: respuesta.data.results\n        });\n    }\n\n    handleChange = (ev) => {\n        const name = ev.target.id;\n        const value = ev.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"nombres\">Nombres</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"nombres\" \n                            value={this.props.nombres}\n                            onChange={this.props.onChange}\n                        />\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"apellidos\">Apellidos</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" id=\"apellidos\" \n                            value={this.props.apellidos} \n                            onChange={this.props.onChange}\n                        />\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"edad\">Edad</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"number\" \n                            id=\"edad\" \n                            value={this.props.edad} \n                            onChange={this.props.onChange}\n                        />\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"genero\">Genero</label>\n                        <select \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"genero\" \n                            value={this.props.genero} \n                            onChange={this.props.onChange}\n                        >\n                            <option value=\"M\">Maculino</option>\n                            <option value=\"F\">Femenino</option>\n                        </select>\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"ciudad\">Ciudad</label>\n                        <select \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"ciudad\" \n                            value={this.props.ciudad} \n                            onChange={this.props.onChange}\n                        >\n                            <option>Seleccione uno</option>\n                            { \n                                this.state.ciudades.map((ciudad) => (\n                                    <option key={ciudad.id} value={ciudad.id}>{ciudad.nombre}</option>\n                                ))\n                            }\n                            \n                        </select>\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"email\">Correo</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"email\" \n                            id=\"email\" \n                            value={this.props.email} \n                            onChange={this.props.onChange}\n                        />\n                    </div>\n                    <div className=\"col-md-6 form-check\">\n                        <label htmlFor=\"tiene_hijos\">Tiene hijos</label>\n                        <select \n                            className=\"form-control\" \n                            id=\"tiene_hijos\" \n                            value={this.props.tiene_hijos}\n                            onChange={this.props.onChange}\n                        >\n                            <option value=\"\">Seleccione uno</option>\n                            <option value=\"true\">SI</option>\n                            <option value=\"false\">NO</option>\n                        </select>\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"edad\">Edad hijos</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"edad_hijos\" \n                            placeholder=\"Ejemplo: 12, 2, 3\"\n                            value={this.props.edad_hijos} \n                            onChange={this.props.onChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DatosEncuestado;\n\n","import React from 'react';\n\nconst Guardado = (props) => (\n    <div className=\"mensaje\">\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">Muchas Gracias</h4>\n                <p className=\"card-text\">\n                    {props.mensaje}\n                </p>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Guardado;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass ImagenOpciones extends React.Component{\n    state = {\n        checked: false,\n    };\n\n    handleClick = () => {\n\n        if (!this.state.checked) {\n            this.props.agregar_respuesta(this.props.pregunta, this.props.opcion);\n        } else {\n            this.props.quitar_respuesta(this.props.pregunta, this.props.opcion);\n        }\n\n        this.setState({\n            checked: !this.state.checked\n        });\n    }\n\n    render() {\n        const {opcion} = this.props;\n        let classButton = 'fa fa-check hidden';\n        if (this.state.checked) {\n            classButton += 'fa fa-check checked-image';\n        }\n        return (   \n            <div className=\"col-xs-4 col-sm-3 col-md-3 text-center\">\n                <button type=\"button\" onClick={this.handleClick} className=\"image-check\">\n                    <img className=\"img-responsive img-op\" src={ opcion.imagen } alt={opcion.imagen}/>\n                    <i className={classButton}></i>\n                </button>\n            </div>\n        )\n    }\n};\n\nexport default connect(null, encuestaActions)(ImagenOpciones);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass TextoOpcion extends React.Component {\n\n    handleChange = (ev) => {\n        const flag = ev.target.checked;\n        if (this.props.multiple === 1) {\n            this.props.agregar_respuesta_uno(this.props.pregunta, this.props.opcion);\n            return ;\n        }\n        \n        if (flag) {\n            this.props.agregar_respuesta(this.props.pregunta, this.props.opcion);\n        } else {\n            this.props.quitar_respuesta(this.props.pregunta, this.props.opcion);\n        }\n    }\n\n    render() {\n        const { opcion } = this.props;\n        let type = 'checkbox';\n        if (this.props.multiple === 1) {\n            type = 'radio';\n        }\n\n        return (\n            <div className=\"form-check\">\n                <input\n                    className=\"form-check-input\"\n                    type={type} \n                    name={this.props.pregunta}\n                    id={opcion.id}\n                    value={opcion.id}\n                    onChange={this.handleChange}\n                />\n                <label className=\"form-check-label\" htmlFor={opcion.id}>\n                    {opcion.titulo}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, encuestaActions)(TextoOpcion);\n","import React, { Fragment } from 'react';\nimport ImagenOpciones from './ImagenOpciones';\nimport TextoOpcion from './TextoOpcion';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass Opciones extends React.Component {\n\n    handleMultiples = (opciones) => {\n        const file = opciones.filter(op => op.imagen !== null);\n\n        if (file.length) {\n            return (\n                <div className=\"row\">\n                    {\n                        opciones.map((opcion, index) => (\n                            <ImagenOpciones\n                                key={opcion.id}\n                                opcion={opcion}\n                                pregunta={this.props.pregunta}\n                                index={index}\n                            />\n                        ))\n                    }\n                </div>\n            )\n        } else {\n            const especifica = this.props.encuesta.preguntas[this.props.pregunta].especifica;\n            const respuesta = this.props.encuesta.preguntas[this.props.pregunta].respuestas[0];\n            let flag = false;\n            if (respuesta) {\n                flag = respuesta.especifica;\n            }\n\n            return (\n                <Fragment>\n                    {this.props.encuesta.preguntas[this.props.pregunta].expecifica}\n                    {\n                        opciones.map((opcion) => (\n                            <TextoOpcion\n                                key={opcion.id}\n                                opcion={opcion}\n                                pregunta={this.props.pregunta}\n                                multiple={this.props.encuesta.preguntas[this.props.pregunta].max_respuestas}\n                            />\n                        ))\n                    }\n                    {\n                        especifica && flag\n                        ?\n                            <div className=\"form-group\">\n                                <textarea\n                                    className=\"form-control\"\n                                    name=\"abierto[]\"\n                                    onChange={(ev) => this.props.agregar_respuesta_texto(this.props.pregunta, ev.target.value)}\n                                ></textarea>\n                            </div>\n                        :   ''\n                    }\n                </Fragment>\n            )\n                    \n        }\n        \n    }\n\n    handleMultiplesDependencia = () => {\n        const dependencia = this.props.encuesta.preguntas[this.props.pregunta].dependencia;\n        const index = this.props.encuesta.preguntas.findIndex(pre => pre.id === dependencia);\n        const opciones = this.props.encuesta.preguntas[index].respuestas;\n        console.log(opciones);\n        return (\n            <div className=\"row\">\n                {\n                    opciones.map((opcion, index) => (\n                        <ImagenOpciones\n                            key={opcion.id}\n                            opcion={opcion}\n                            pregunta={this.props.pregunta}\n                            index={index}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n\n    render() {\n\n        // return this.ponerAbiertoOpcion();\n        const {pregunta} = this.props;\n        if (this.props.encuesta.preguntas[pregunta].respuestas_multiples) {\n            return this.handleMultiples(this.props.encuesta.preguntas[pregunta].opciones);\n        } else if (this.props.encuesta.preguntas[pregunta].dependencia) {\n            return this.handleMultiplesDependencia();\n        } else {\n            return (\n                <div className=\"form-group\">\n                    <textarea\n                        className=\"form-control\"\n                        name=\"abierto[]\"\n                        onChange={(ev) => this.props.agregar_respuesta_texto(pregunta, ev.target.value)}\n                    ></textarea>\n                </div>\n            )\n        }\n    }\n    \n}\n\nconst mapStateToProps = (reducers) => reducers.encuestaReducers;\n\nexport default connect(mapStateToProps, encuestaActions)(Opciones);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\nimport Loader from '../utils/Loader';\nimport DatosEncuesta from '../DatosEncuestado';\nimport Guardado from './Guardado';\n\nimport Opciones from '../Encuestas/Opciones'\nclass Encuesta extends React.Component {\n    state = {\n        nombres: '',\n        apellidos: '',\n        edad: 0,\n        genero: 'M',\n        ciudad: '',\n        email: '',\n        tiene_hijos: false,\n        edad_hijos: ''\n    }\n\n    async componentDidMount() {\n        await this.props.traer_uno(this.props.match.params.slug);\n    }\n\n    handleSumit = (ev) => {\n        ev.preventDefault();\n        this.props.guardar_datos(this.state);\n    }\n\n    handleChangeInput = (ev) => {\n        const name = ev.target.id;\n        const value = ev.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        console.log(this.props);\n        if (this.props.cargando) {\n            return <Loader />\n        }\n\n        if (this.props.mensaje) {\n            return <Guardado mensaje={this.props.mensaje} />\n        }\n\n        return (\n            <form className=\"form-encuesta\" onSubmit={this.handleSumit}>\n                <h4 className=\"text-center\">{this.props.encuesta.nombre}</h4>\n                <br />\n                <DatosEncuesta  onChange={this.handleChangeInput} {...this.state}/>\n                <br />\n                {\n                    this.props.encuesta.preguntas.map((pregunta, index) => (\n                        <div key={pregunta.id} className=\"content-preguntas\">\n                            <h5>{ pregunta.nombre }</h5>\n                            <p className=\"text-muted\">{ pregunta.descripcion }</p>\n                            <Opciones pregunta={index}/>\n                        </div>\n                    ))\n                }\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Enviar información</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (reducers) => reducers.encuestaReducers;\n\nexport default connect(mapStateToProps, encuestaActions)(Encuesta);\n","import React from 'react';\nimport Encuesta from './Encuesta';\nimport { Route } from 'react-router-dom';\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Route exact path=\"/:slug\" component={Encuesta}/>\n        </div>\n    )\n};\n\nexport default App;\n","import {\n    CARGANDO,\n    ERROR,\n    TRAER_UNO,\n    DATOS_ENCUESTADO,\n    GUARDADO\n} from '../types/encuestaTypes';\n\nconst INITIA_STATE = {\n    encuesta: {},\n    datos_encuestado: {},\n    cargando: true,\n    mensaje: '',\n    error: ''\n};\n\nexport default (state = INITIA_STATE, action) => {\n    switch (action.type) {\n        case TRAER_UNO:\n            return {\n                ...state,\n                encuesta: action.payload,\n                cargando: false,\n                error: ''\n            };\n        case CARGANDO:\n            return {\n                ...state,\n                cargando: true\n            };\n        case ERROR:\n            return {\n                ...state,\n                cargando: false,\n                error: action.payload\n            };\n        case DATOS_ENCUESTADO:\n            return {\n                ...state,\n                datos_encuestado: action.payload\n            };\n        case GUARDADO:\n            return {\n                ...state,\n                encuesta: {},\n                cargando: false,\n                mensaje: action.payload\n            };\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport encuestaReducers from './encuestaReducers';\n\nexport default combineReducers({\n    encuestaReducers,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nimport reducers from './reducers';\n\nconst store = createStore(\n    reducers,\n    {},\n    applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, \n    document.getElementById('root'));\n\n"],"sourceRoot":""}
{"version":3,"sources":["types/encuestaTypes.js","actions/encuestaActions.js","components/utils/Loader.js","components/DatosEncuestado/index.js","components/Encuesta/Guardado.js","components/Encuestas/ImagenOpciones.js","components/Encuestas/TextoOpcion.js","components/Encuestas/Opciones.js","components/Encuesta/index.js","components/App.js","reducers/encuestaReducers.js","reducers/index.js","index.js"],"names":["TRAER_UNO","GUARDADO","SIGUIENTE","traer_uno","slug","dispatch","a","axios","get","respuesta","datos","data","preguntas","map","pregunta","respuestas","respuesta_texto","actualizado","type","payload","console","log","agregar_respuesta","id_pregunta","getState","encuesta","encuestaReducers","concat","agregar_respuesta_uno","quitar_respuesta","index","findIndex","resp","id","splice","agregar_respuesta_texto","guardar_datos","datos_encuestado","config","headers","forEach","length","res","push","dependencia","data_send","id_encuesta","post","cambiaGenero","siguiente","Loader","className","DatosEncuestado","state","ciudades","errores","handleChange","ev","name","target","value","setState","validaDatosEncuestado","props","Object","keys","this","results","htmlFor","nombres","onChange","required","apellidos","edad","genero","ciudad","key","nombre","email","tiene_hijos","placeholder","edad_hijos","genero_hijo","mostrarEncuesta","onClick","React","Component","Guardado","mensaje","ImagenOpciones","checked","handleClick","max_respuestas","opcion","classButton","src","imagen","alt","connect","reducers","encuestaActions","TextoOpcion","flag","multiple","titulo","Opciones","handleMultiples","opciones","filter","op","gen","especifica","expecifica","handleMultiplesDependencia","pre","respuestas_multiples","Encuesta","match","params","handleSumit","preventDefault","handleChangeInput","mostrarDatosForm","descripcion","cargando","ref","form","onSubmit","App","exact","path","component","INITIA_STATE","error","combineReducers","action","store","createStore","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4102e6d3.chunk.js","sourcesContent":["export const CARGANDO = 'CARGANDO_ENCUESTA';\nexport const ERROR = 'ERROR_ENCUESTA';\nexport const TRAER_UNO  ='TRAER_UNO_ENCUESTA';\nexport const DATOS_ENCUESTADO = 'DATOS_ENCUESTADO';\nexport const GUARDADO = 'GUARDADO_ENCUESTA';\nexport const SIGUIENTE = 'SIGUIENTE_ENCUESTA';\nexport const CAMBIO_GENERO = 'CAMBIO_GENERO';\n","import axios from 'axios';\n\nimport {\n    TRAER_UNO,\n    GUARDADO,\n    SIGUIENTE,\n} from '../types/encuestaTypes';\n\nexport const traer_uno = (slug) => async (dispatch) => {\n    try {\n        const respuesta = await axios.get(`https://www.mktestudios.com/api/v1/encuestas/${slug}/`);\n        const datos = respuesta.data;\n\n        const preguntas = datos.preguntas.map(pregunta => ({\n            ...pregunta,\n            respuestas: [],\n            respuesta_texto: ''\n        }));\n        \n        const actualizado = {\n            ...datos,\n            preguntas\n        };\n        \n        dispatch({\n            type: TRAER_UNO,\n            payload: actualizado\n        });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const agregar_respuesta = (id_pregunta, respuesta) => (dispatch, getState) => {\n    \n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: preguntas[id_pregunta].respuestas.concat(respuesta)\n    }\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n}\n\nexport const agregar_respuesta_uno = (id_pregunta, respuesta) => (dispatch, getState) => {\n    \n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: [respuesta]\n    }\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n}\n\nexport const quitar_respuesta = (id_pregunta, respuesta) => (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    const respuestas = preguntas[id_pregunta].respuestas;\n    const index = respuestas.findIndex(resp => resp.id === respuesta.id);\n    respuestas.splice(index, 1);\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuestas: respuestas\n    };\n\n    const actualizado = {\n        ...encuesta,\n        preguntas,\n    }\n    \n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n\n}\n\nexport const agregar_respuesta_texto = (id_pregunta, respuesta) => (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas;\n    preguntas[id_pregunta] = {\n        ...preguntas[id_pregunta],\n        respuesta_texto: respuesta\n    };\n\n    const actualizado = {\n        ...encuesta,\n        preguntas\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n};\n\nexport const guardar_datos = (datos_encuestado) => async (dispatch, getState) => {\n\n\n    // const csrf = document.querySelector('[name=csrfmiddlewaretoken]').value;\n    const csrf = '123';\n    const config = {\n        headers: {\n          'X-CSRFToken': csrf,\n        }\n    }\n\n\n    const { encuesta } = getState().encuestaReducers;\n    \n    const respuestas = [];\n\n    encuesta.preguntas.forEach(pregunta => {\n        if (pregunta.respuestas.length > 0) {\n            pregunta.respuestas.forEach((res)=> {\n                respuestas.push({\n                    'id_pregunta': pregunta.id,\n                    'id_opcion': res.id,\n                    'texto_respuesta': pregunta.respuesta_texto,\n                    'relacion_pregunta': pregunta.dependencia || 0\n                });\n            });\n        } else {\n            respuestas.push({\n                'id_pregunta': pregunta.id,\n                'id_opcion': 0,\n                'texto_respuesta': pregunta.respuesta_texto,\n                'relacion_pregunta': pregunta.dependencia || 0\n            });\n        }\n        \n    });\n\n    const data_send = {\n        id_encuesta: encuesta.slug,\n        respuestas,\n        datos_encuestado: datos_encuestado,\n    };\n\n    try {\n        await axios.post(`https://www.mktestudios.com/api/v1/respuestas/`, data_send, config);\n        dispatch({\n            type: GUARDADO,\n            payload: 'El formulario ha sido guardado correctamente muchas gracias.'\n        });\n    } catch (error) {\n        console.log(error);\n    }\n    \n}\n\nexport const cambiaGenero = () => (dispatch, getState) => {\n    const { encuesta } = getState().encuestaReducers;\n    const preguntas = encuesta.preguntas.map(pregunta => ({\n        ...pregunta,\n        respuestas: []\n    }));\n    const actualizado = {\n        ...encuesta,\n        preguntas\n    }\n\n    dispatch({\n        type: TRAER_UNO,\n        payload: actualizado\n    });\n}\n\n\nexport const siguiente = () => (dispatch) => {\n    dispatch({\n        type: SIGUIENTE\n    });\n}\n","import React from 'react';\n\nimport '../../css/Loader.css';\n\nconst Loader = () => (\n    <div className=\"loader\">\n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n    </div>\n    \n);\n\nexport default Loader;\n","import React from 'react';\nimport axios from 'axios';\n\nclass DatosEncuestado extends React.Component {\n    state = {\n        ciudades: [],\n        errores: {}\n    }\n\n    async componentDidMount() {\n\n        const respuesta = await axios.get(`https://www.mktestudios.com/api/v1/ciudades/`);\n        this.setState({\n            ciudades: respuesta.data.results\n        });\n    }\n\n    handleChange = (ev) => {\n        const name = ev.target.id;\n        const value = ev.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    validaDatosEncuestado = () => {\n        \n        const errores = this.props.validaDatosEncuestado();\n        if (Object.keys(errores).length) {\n            this.setState({\n                errores: errores\n            });\n            return;\n        }\n\n        this.props.siguiente();\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"nombres\">Nombres</label>\n                        <input\n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"nombres\" \n                            value={this.props.nombres}\n                            onChange={this.props.onChange}\n                            required\n                        />\n                        { this.state.errores['nombres'] ? \n                            <p className=\"text-muted\">{this.state.errores['nombres']}</p>\n                            : ''\n                        }\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"apellidos\">Apellidos</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" id=\"apellidos\" \n                            value={this.props.apellidos} \n                            onChange={this.props.onChange}\n                            required\n                        />\n                        { this.state.errores['apellidos'] ? \n                            <p className=\"text-muted\">{this.state.errores['apellidos']}</p>\n                            : ''\n                        }\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"edad\">Edad</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"number\" \n                            id=\"edad\" \n                            value={this.props.edad} \n                            onChange={this.props.onChange}\n                            required\n                        />\n                        { this.state.errores['edad'] ? \n                            <p className=\"text-muted\">{this.state.errores['edad']}</p>\n                            : ''\n                        }\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"genero\">Género</label>\n                        <select \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"genero\" \n                            value={this.props.genero} \n                            onChange={this.props.onChange}\n                            required\n                        >\n                            <option value=\"H\">HOMBRE</option>\n                            <option value=\"M\">MUJER</option>\n                        </select>\n                        { this.state.errores['genero'] ? \n                            <p className=\"text-muted\">{this.state.errores['genero']}</p>\n                            : ''\n                        }\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"ciudad\">Ciudad</label>\n                        <select \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"ciudad\" \n                            value={this.props.ciudad} \n                            onChange={this.props.onChange}\n                            required\n                        >\n                            <option>Seleccione uno</option>\n                            { \n                                this.state.ciudades.map((ciudad) => (\n                                    <option key={ciudad.id} value={ciudad.id}>{ciudad.nombre}</option>\n                                ))\n                            }\n                            \n                        </select>\n                        { this.state.errores['ciudad'] ? \n                            <p className=\"text-muted\">{this.state.errores['ciudad']}</p>\n                            : ''\n                        }\n                    </div>\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"email\">Correo</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"email\" \n                            id=\"email\" \n                            value={this.props.email} \n                            onChange={this.props.onChange}\n                            required\n                        />\n                        { this.state.errores['ciudad'] ? \n                            <p className=\"text-muted\">{this.state.errores['ciudad']}</p>\n                            : ''\n                        }\n                    </div>\n                    { this.props.slug === 'infantil' ?\n                    <div className=\"col-md-6 form-check\">\n                        <label htmlFor=\"tiene_hijos\">Tiene hijos</label>\n                        <select \n                            className=\"form-control\" \n                            id=\"tiene_hijos\" \n                            value={this.props.tiene_hijos}\n                            onChange={this.props.onChange}\n                        >\n                            <option value=\"\">Seleccione uno</option>\n                            <option value=\"true\">SI</option>\n                            <option value=\"false\">NO</option>\n                        </select>\n                        { this.state.errores['tiene_hijos'] ? \n                            <p className=\"text-muted\">{this.state.errores['tiene_hijos']}</p>\n                            : ''\n                        }\n                    </div> : ''\n                    }\n                    { this.props.slug === 'infantil' ?\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"edad\">Edad hijos</label>\n                        <input \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"edad_hijos\" \n                            placeholder=\"Ejemplo: 12, 2, 3\"\n                            value={this.props.edad_hijos} \n                            onChange={this.props.onChange}\n                        />\n                        { this.state.errores['edad_hijos'] ? \n                            <p className=\"text-muted\">{this.state.errores['edad_hijos']}</p>\n                            : ''\n                        }\n                    </div>\n                    : ''\n                    }\n                    { this.props.slug === 'infantil' ?\n                    <div className=\"col-md-6 form-group\">\n                        <label htmlFor=\"genero_hijo\">Género Hijo</label>\n                        <select \n                            className=\"form-control\" \n                            type=\"text\" \n                            id=\"genero_hijo\" \n                            value={this.props.genero_hijo} \n                            onChange={this.props.onChange}\n                            required\n                        >\n                            <option value=\"H\">HOMBRE</option>\n                            <option value=\"M\">MUJER</option>\n                        </select>\n                        { this.state.errores['genero_hijo'] ? \n                            <p className=\"text-muted\">{this.state.errores['genero_hijo']}</p>\n                            : ''\n                        }\n                    </div>\n                        : ''\n                    }\n                </div>\n                <div className=\"text-center\">\n                    { !this.props.mostrarEncuesta ? \n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.validaDatosEncuestado}>Siguiente</button>\n                    : ''\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DatosEncuestado;\n\n","import React from 'react';\n\nconst Guardado = (props) => (\n    <div className=\"mensaje\">\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">Muchas Gracias</h4>\n                <p className=\"card-text\">\n                    {props.mensaje}\n                </p>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Guardado;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass ImagenOpciones extends React.Component{\n    state = {\n        checked: false,\n    };\n\n    handleClick = () => {\n        const pregunta = this.props.encuesta.preguntas[this.props.pregunta];\n\n        if (!this.state.checked) {\n            if (pregunta.max_respuestas === 1) {\n                this.props.agregar_respuesta_uno(this.props.pregunta, this.props.opcion);\n                this.setState({\n                    checked: true\n                });\n                return;\n            } else {\n                this.props.agregar_respuesta(this.props.pregunta, this.props.opcion);\n            }\n        } else {\n            if (pregunta.max_respuestas === 1) {\n                this.props.agregar_respuesta_uno(this.props.pregunta, this.props.opcion);\n                this.setState({\n                    checked: true\n                });\n                return;\n            } else {\n                this.props.quitar_respuesta(this.props.pregunta, this.props.opcion);\n            } \n        }\n\n        this.setState({\n            checked: !this.state.checked\n        });\n    }\n\n    render() {\n        const {opcion} = this.props;\n        const pregunta = this.props.encuesta.preguntas[this.props.pregunta];\n        let index = pregunta.respuestas.findIndex(res => res.id === this.props.opcion.id);\n\n        let classButton = 'fa fa-check hidden';\n        \n        if (pregunta.max_respuestas === 1) {\n            // index = pregunta.respuestas.findIndex(res => res.id === this.props.opcion.id);\n            if (this.state.checked && index > -1) {\n                classButton += 'fa fa-check checked-image';\n            }\n        } else {\n            if (this.state.checked && index > -1) {\n                classButton += 'fa fa-check checked-image';\n            }\n        }\n\n        return (   \n            <div className=\"col-xs-4 col-sm-3 col-md-3 text-center image-form\">\n                <button type=\"button\" onClick={this.handleClick} className=\"image-check\">\n                    <img className=\"img-responsive img-op\" src={ opcion.imagen } alt={opcion.imagen}/>\n                    <i className={classButton}></i>\n                </button>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reducers) => reducers.encuestaReducers;\n\nexport default connect(mapStateToProps, encuestaActions)(ImagenOpciones);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass TextoOpcion extends React.Component {\n\n    handleChange = (ev) => {\n        const flag = ev.target.checked;\n        if (this.props.multiple === 1) {\n            this.props.agregar_respuesta_uno(this.props.pregunta, this.props.opcion);\n            return ;\n        }\n        \n        if (flag) {\n            this.props.agregar_respuesta(this.props.pregunta, this.props.opcion);\n        } else {\n            this.props.quitar_respuesta(this.props.pregunta, this.props.opcion);\n        }\n    }\n\n    render() {\n        const { opcion } = this.props;\n        let type = 'checkbox';\n        if (+this.props.multiple === 1) {\n            type = 'radio';\n        }\n\n        return (\n            <div className=\"form-check\">\n                <input\n                    className=\"form-check-input\"\n                    type={type} \n                    name={this.props.pregunta}\n                    id={opcion.id}\n                    value={opcion.id}\n                    onChange={this.handleChange}\n                />\n                <label className=\"form-check-label\" htmlFor={opcion.id}>\n                    {opcion.titulo}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, encuestaActions)(TextoOpcion);\n","import React, { Fragment } from 'react';\nimport ImagenOpciones from './ImagenOpciones';\nimport TextoOpcion from './TextoOpcion';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\n\nclass Opciones extends React.Component {\n\n    handleMultiples = (opciones) => {\n        const file = opciones.filter(op => op.imagen !== null);\n\n        if (file.length) {\n            const gen = opciones.filter(op => op.genero === this.props.genero);\n            if (gen.length) {\n                opciones = gen;\n            }\n            \n            return (\n                <div className=\"row\">\n                    {\n                        opciones.map((opcion, index) => (\n                            <ImagenOpciones\n                                key={opcion.id + this.props.pregunta}\n                                opcion={opcion}\n                                pregunta={this.props.pregunta}\n                                index={index}\n                            />\n                        ))\n                    }\n                </div>\n            )\n        } else {\n            const especifica = this.props.encuesta.preguntas[this.props.pregunta].especifica;\n            const respuesta = this.props.encuesta.preguntas[this.props.pregunta].respuestas[0];\n            let flag = false;\n            if (respuesta) {\n                flag = respuesta.especifica;\n            }\n\n            return (\n                <Fragment>\n                    {this.props.encuesta.preguntas[this.props.pregunta].expecifica}\n                    {\n                        opciones.map((opcion) => (\n                            <TextoOpcion\n                                key={opcion.id}\n                                opcion={opcion}\n                                pregunta={this.props.pregunta}\n                                multiple={this.props.encuesta.preguntas[this.props.pregunta].max_respuestas}\n                            />\n                        ))\n                    }\n                    {\n                        especifica && flag\n                        ?\n                            <div className=\"form-group\">\n                                <textarea\n                                    className=\"form-control\"\n                                    name=\"abierto[]\"\n                                    onChange={(ev) => this.props.agregar_respuesta_texto(this.props.pregunta, ev.target.value)}\n                                ></textarea>\n                            </div>\n                        :   ''\n                    }\n                </Fragment>\n            )\n                    \n        }\n        \n    }\n\n    handleMultiplesDependencia = () => {\n        const dependencia = this.props.encuesta.preguntas[this.props.pregunta].dependencia;\n        const index = this.props.encuesta.preguntas.findIndex(pre => pre.id === dependencia);\n        const opciones = this.props.encuesta.preguntas[index].respuestas;\n\n        return (\n            <div className=\"row\">\n                {\n                    opciones.map((opcion, index) => (\n                        <ImagenOpciones\n                            key={opcion.id}\n                            opcion={opcion}\n                            pregunta={this.props.pregunta}\n                            index={index}\n                        />\n                    ))\n                }\n            </div>\n        )\n    }\n\n    render() {\n\n        // return this.ponerAbiertoOpcion();\n        const {pregunta} = this.props;\n        if (this.props.encuesta.preguntas[pregunta].respuestas_multiples) {\n            return this.handleMultiples(this.props.encuesta.preguntas[pregunta].opciones);\n        } else if (this.props.encuesta.preguntas[pregunta].dependencia) {\n            return this.handleMultiplesDependencia();\n        } else {\n            return (\n                <div className=\"form-group\">\n                    <textarea\n                        className=\"form-control\"\n                        name=\"abierto[]\"\n                        onChange={(ev) => this.props.agregar_respuesta_texto(pregunta, ev.target.value)}\n                    ></textarea>\n                </div>\n            )\n        }\n    }\n    \n}\n\nconst mapStateToProps = (reducers) => reducers.encuestaReducers;\n\nexport default connect(mapStateToProps, encuestaActions)(Opciones);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as encuestaActions from '../../actions/encuestaActions';\nimport Loader from '../utils/Loader';\nimport DatosEncuesta from '../DatosEncuestado';\nimport Guardado from './Guardado';\n\nimport Opciones from '../Encuestas/Opciones'\nclass Encuesta extends React.Component {\n    state = {\n        nombres: '',\n        apellidos: '',\n        edad: '',\n        genero: 'M',\n        ciudad: '',\n        email: '',\n        tiene_hijos: false,\n        edad_hijos: '',\n        genero_hijo: 'H'\n    }\n\n    async componentDidMount() {\n        await this.props.traer_uno(this.props.match.params.slug);\n    }\n\n    validaDatosEncuestado = () => {\n        const errores = {};\n        if (this.state.nombres === '') {\n            errores['nombres'] = 'Nombre es requerido';\n        }\n        if (this.state.apellidos === '') {\n            errores['apellidos'] = 'Apellido es requerido';\n        }\n        if (this.state.edad === 0 || this.state.edad === '') {\n            errores['edad'] = 'Edad es requerida';\n        }\n        if (this.state.ciudad === '') {\n            errores['ciudad'] = 'Ciudad es requerido';\n        }\n\n        if (this.props.match.params.slug === 'infantil') {\n            if (this.state.edad_hijos === '' && this.state.tiene_hijos !== false ) {\n                errores['edad_hijos'] = 'La edad de los hijos es requerido';\n            }\n        }\n\n        if (this.props.match.params.slug === 'infantil') {\n            if (this.state.tiene_hijos === false && Object.keys(errores).length === 0) {\n                this.props.guardar_datos(this.state);\n            }\n        }\n\n        return errores;\n    }\n\n    handleSumit = (ev) => {\n        ev.preventDefault();\n        this.props.guardar_datos(this.state);\n    }\n\n    handleChangeInput = (ev) => {\n        const name = ev.target.id;\n        const value = ev.target.value;\n        this.setState({\n            [name]: value\n        });\n        if (name === 'genero_hijo') {\n            this.props.cambiaGenero();\n        }\n    }\n\n    mostrarDatosForm = () => {\n        console.log(this.props.mostrarEncuesta)\n        if (!this.props.mostrarEncuesta) {\n            return ;\n        }\n\n        return (\n            <div>\n                {\n                    this.props.encuesta.preguntas.map((pregunta, index) => (\n                        <div key={pregunta.id} className=\"content-preguntas\">\n                            <h5>{ pregunta.nombre }</h5>\n                            <p className=\"text-muted\">{ pregunta.descripcion }</p>\n                            <Opciones \n                                pregunta={index} \n                                genero={this.props.match.params.slug === 'infantil' ? this.state.genero_hijo : this.state.genero}\n                            />\n                        </div>\n                    ))\n                }\n                <div className=\"text-center\">\n                    <button type=\"submit\" className=\"btn btn-primary\">Enviar información</button>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        console.log(this.props);\n        if (this.props.cargando) {\n            return <Loader />\n        }\n\n        if (this.props.mensaje) {\n            return <Guardado mensaje={this.props.mensaje} />\n        }\n\n        return (\n            <form ref={(form) => this.form = form } className=\"form-encuesta\" onSubmit={this.handleSumit}>\n                <h4 className=\"text-center\">{this.props.encuesta.nombre}</h4>\n                <br />\n                <DatosEncuesta \n                    mostrarEncuesta={this.props.mostrarEncuesta} \n                    validaDatosEncuestado={this.validaDatosEncuestado}  \n                    siguiente={this.props.siguiente}  \n                    slug={this.props.match.params.slug}  \n                    onChange={this.handleChangeInput} \n                    {...this.state}\n                />\n                <br />\n                { this.mostrarDatosForm() }\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (reducers) => reducers.encuestaReducers;\n\nexport default connect(mapStateToProps, encuestaActions)(Encuesta);\n","import React from 'react';\nimport Encuesta from './Encuesta';\nimport { Route } from 'react-router-dom';\nconst App = () => {\n    return (\n        <div className=\"container\">\n            <Route exact path=\"/:slug\" component={Encuesta}/>\n        </div>\n    )\n};\n\nexport default App;\n","import {\n    CARGANDO,\n    ERROR,\n    TRAER_UNO,\n    DATOS_ENCUESTADO,\n    GUARDADO,\n    SIGUIENTE,\n} from '../types/encuestaTypes';\n\nconst INITIA_STATE = {\n    encuesta: {},\n    datos_encuestado: {},\n    cargando: true,\n    mensaje: '',\n    error: '',\n    mostrarEncuesta: false\n};\n\nexport default (state = INITIA_STATE, action) => {\n    switch (action.type) {\n        case TRAER_UNO:\n            return {\n                ...state,\n                encuesta: action.payload,\n                cargando: false,\n                error: ''\n            };\n        case CARGANDO:\n            return {\n                ...state,\n                cargando: true\n            };\n        case ERROR:\n            return {\n                ...state,\n                cargando: false,\n                error: action.payload\n            };\n        case DATOS_ENCUESTADO:\n            return {\n                ...state,\n                datos_encuestado: action.payload\n            };\n        case GUARDADO:\n            return {\n                ...state,\n                encuesta: {},\n                cargando: false,\n                mensaje: action.payload\n            };\n        case SIGUIENTE:\n            return {\n                ...state,\n                mostrarEncuesta: true\n            }\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport encuestaReducers from './encuestaReducers';\n\nexport default combineReducers({\n    encuestaReducers,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduxThunk from 'redux-thunk';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nimport reducers from './reducers';\n\nconst store = createStore(\n    reducers,\n    {},\n    applyMiddleware(reduxThunk)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, \n    document.getElementById('root'));\n\n"],"sourceRoot":""}